!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("@stellar/stellar-sdk")):"function"==typeof define&&define.amd?define(["@stellar/stellar-sdk"],e):"object"==typeof exports?exports.stellarbroker=e(require("@stellar/stellar-sdk")):t.stellarbroker=e(t["@stellar/stellar-sdk"])}(this,(t=>(()=>{"use strict";var e={346:e=>{e.exports=t}},o={};function s(t){var i=o[t];if(void 0!==i)return i.exports;var r=o[t]={exports:{}};return e[t](r,r.exports,s),r.exports}s.d=(t,e)=>{for(var o in e)s.o(e,o)&&!s.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},s.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var i={};s.d(i,{default:()=>b});var r=s(346);class n extends Error{constructor(t,e){super(e),this.code=t}code=0}const a={invalidInitParam:t=>new n(1,`Invalid parameter value: "${t}"`),invalidAuthorizationParam:()=>new n(2,"Invalid authorization secret key or callback provided"),notConnected:()=>new n(3,"Client not connected to the server"),quoteNotSet:()=>new n(11,"Price quote not available"),quoteExpired:()=>new n(12,"Price quote expired"),quoteError:t=>new n(13,"Price quotation error: "+t),invalidQuoteParam:(t="asset",e)=>new n(14,`Invalid quote request parameter: "${t}". ${e}`),tradeInProgress:()=>new n(20,"Cannot change quote while trade is in progress"),invalidSwapTx:()=>new n(21,"Invalid swap transaction received from the server"),failedToSignTx:()=>new n(22,"Failed to sign received transaction"),unsupportedEventType:t=>new n(31,"Unknown event type: "+t),serverError:t=>new n(101,t)};function u(t,e,o){const s=new CustomEvent(t,{detail:e});return s[o||t]=e,s}function c(t,e){if("string"==typeof t){if("XLM"===t||"xlm"===t||"native"===t)return"XLM";if(t.includes(":")){const[o,s]=t.split(":");return l(o),d(s,e),o+"-"+s}if(t.includes("-")){const[o,s]=t.split("-");return l(o),d(s,e),t}}throw a.invalidQuoteParam(e,"Invalid asset")}function l(t,e){if(!/^[a-zA-Z0-9]{1,12}$/.test(t))throw a.invalidQuoteParam(e,"Invalid asset code: "+(t||"missing"));return t}function d(t,e){if(!t||!r.StrKey.isValidEd25519PublicKey(t))throw a.invalidQuoteParam(e,"Invalid account address: "+(t||"missing"));return t}function h(t){const{destination:e,sellingAsset:o,selling_asset:s,buyingAsset:i,buying_asset:r,sellingAmount:n,selling_amount:u,buyingAmount:l,buying_amount:d,slippageTolerance:h,slippage_tolerance:g,...m}=t,y={sellingAsset:c(o||s,"sellingAsset"),buyingAsset:c(i||r,"buyingAsset"),sellingAmount:p(n||u,"sellingAmount"),buyingAmount:p(l||d,"buyingAmount"),slippageTolerance:f(h||g||.02,"slippageTolerance"),flow:"direct"};if(y.buyingAsset===y.sellingAsset)throw a.invalidQuoteParam("buyingAsset","Buying asset can't be the same as selling asset");if(void 0===y.buyingAmount&&void 0===y.sellingAmount)throw a.invalidQuoteParam("sellingAmount",'Either "buyingAmount" or "sellingAmount" parameter is required');if(void 0!==y.buyingAmount&&void 0!==y.sellingAmount)throw a.invalidQuoteParam("sellingAmount",'Parameters "buyingAmount" and "sellingAmount" are mutually exclusive');return Object.assign(y,m),Object.freeze(y),y}function p(t,e){if(void 0===t)return;const o=parseFloat(t);if(isNaN(o)||o<=0)throw a.invalidQuoteParam(e,"Invalid asset amount: "+t);return t}function f(t,e){const o=parseFloat(t);if(isNaN(o))throw a.invalidQuoteParam(e,"Invalid slippage tolerance, number expected");if(o<0)throw a.invalidQuoteParam(e,"Slippage tolerance is too small, expected value >= 0");if(o>.5)throw a.invalidQuoteParam(e,"Slippage tolerance is too large, expected value < 0.5 (50%)");return o}async function g(t,e){let o;return o=t.authorization instanceof r.Keypair?new Promise(((o,s)=>{try{e.sign(t.authorization),o(e)}catch(t){s(t)}})):m(t.authorization(e)),o.then((e=>{if("string"==typeof e&&(e=r.TransactionBuilder.fromXDR(e,t.network)),!e||e.signatures?.length<1)throw new Error("Transaction was not signed");return e})).catch((t=>{throw console.error(t),a.failedToSignTx()}))}function m(t){if(!(t instanceof Promise)){if(!t)return Promise.reject();t=Promise.resolve(t)}return t}class y{constructor(t){if(this.partnerKey=t.partnerKey,this.emitter=new EventTarget,this.network=r.Networks[(t.network||"PUBLIC").toUpperCase()]||t.network,this.flow=t.flow||"direct",!t.account||!r.StrKey.isValidEd25519PublicKey(t.account))throw a.invalidQuoteParam("account","Invalid trader account address: "+(t.account?t.account:"missing"));if(this.trader=t.account,"string"==typeof t.authorization)try{this.authorization=r.Keypair.fromSecret(t.authorization)}catch(t){throw a.invalidAuthorizationParam()}else"function"==typeof t.authorization&&(this.authorization=t.authorization)}uid;status="disconnected";socket;emitter;origin="https://api.stellar.broker";network="";quoteRequest;lastQuote;tradeQuote;partnerKey;authorization;trader;connect(){return this.socket?.readyState===WebSocket.OPEN?Promise.resolve(this):(this.socket=new WebSocket(this.origin+"/ws?partner="+encodeURIComponent(this.partnerKey)),this.socket.onmessage=this.processMessage.bind(this),this.socket.onclose=()=>{"disconnected"!==this.status&&(this.status="disconnected",this.notifyError(a.notConnected())),console.log("Connection closed")},this.socket.onerror=t=>console.error(t),new Promise(((t,e)=>{const o=setTimeout((()=>e(this)),2e3);this.onSocketOpen=()=>{this.status="ready",this.heartbeat(),this.onSocketOpen=void 0,clearTimeout(o),t(this)}})))}processMessage(t){const e=JSON.parse(t.data);switch(e.type){case"connected":this.uid=e.uid,this.onSocketOpen&&this.onSocketOpen(),"disconnected"===this.status&&(this.status="ready");break;case"quote":this.lastQuote=e.quote,this.lastQuote.ts=new Date,this.emitter.dispatchEvent(u("quote",this.lastQuote));break;case"paused":this.emitter.dispatchEvent(u("paused",{}));break;case"tx":if("trade"!==this.status)return void console.log("Received tx in non-trading state",this.status,e);(async function(t,e){let o;try{o=r.TransactionBuilder.fromXDR(e.xdr,t.network)}catch(t){throw a.invalidSwapTx()}if(!function(t,e){for(let o of e.operations)if("invokeHostFunction"!==o.type){if("pathPaymentStrictSend"!==o.type&&"pathPaymentStrictReceive"!==o.type)return!1;if(o.destination!==t.trader){if("pathPaymentStrictSend"!==o.type)return!1;if(o.source&&o.source!==t.trader)return!1}else if(o.source&&o.source!==o.destination||o.destination!==t.trader)return!1}return!0}(t,o))throw a.invalidSwapTx();if(o.operations[0].auth?.length>0){if(!o.signatures.length)return await async function(t,e){const o=e.operations[0].auth[0],s=o.credentials().address();s.signatureExpirationLedger(e.ledgerBounds.maxLedger+1);const i=(0,r.hash)(Buffer.from(e.networkPassphrase)),n=r.xdr.HashIdPreimage.envelopeTypeSorobanAuthorization(new r.xdr.HashIdPreimageSorobanAuthorization({networkId:i,nonce:s.nonce(),invocation:o.rootInvocation(),signatureExpirationLedger:s.signatureExpirationLedger()})),a=(0,r.hash)(n.toXDR());let u;u=t.authorization instanceof r.Keypair?t.authorization.sign(a):await m(t.authorization(a));const c=r.StrKey.encodeEd25519PublicKey(s.address().accountId().value()),l=(0,r.nativeToScVal)({public_key:r.StrKey.decodeEd25519PublicKey(c),signature:u},{type:{public_key:["symbol",null],signature:["symbol",null]}});s.signature(r.xdr.ScVal.scvVec([l]))}(t,o),o=await g(t,o),o.toXDR()}else o=await g(t,o);let s=r.TransactionBuilder.buildFeeBumpTransaction(t.trader,e.networkFee,o,t.network);return s=await g(t,s),s.toXDR()})(this,e).then((t=>{this.send({type:"tx",hash:e.hash,xdr:t})})).catch((t=>this.notifyError(t)));break;case"stop":this.emitter.dispatchEvent(u("finished",{status:e.status,sold:e.sold,bought:e.bought},"result")),this.status="ready",this.tradeQuote=void 0;break;case"progress":this.emitter.dispatchEvent(u("progress",{sold:e.sold,bought:e.bought},"status"));break;case"ping":e.uid===this.uid&&(this.heartbeat(),this.send({type:"pong",uid:this.uid}));break;case"error":this.stop(),this.notifyError(e.error);break;default:console.log("Unknown message type: "+e.type)}}quote(t){if("trade"===this.status)throw a.tradeInProgress();this.quoteRequest=h(t),this.status="quote",this.connect().then((()=>{this.status="quote",this.send({type:"quote",...this.quoteRequest})}))}confirmQuote(){if("disconnected"===this.status)throw a.notConnected();if("trade"===this.status)throw a.tradeInProgress();if("quote"!==this.status||!this.lastQuote)throw a.quoteNotSet();if(new Date-this.lastQuote.ts>7e3)throw a.quoteExpired();if("success"!==this.lastQuote.status)throw a.quoteError(this.lastQuote.error||"quote not available");this.tradeQuote=this.lastQuote,this.send({type:"trade",account:this.trader}),this.status="trade"}stop(){"trade"!==this.status&&"quote"!==this.status||(this.send({type:"stop"}),this.tradeQuote=void 0,this.status="ready")}send(t){this.socket.send(JSON.stringify(t))}heartbeat(){clearTimeout(this.pingHandler),this.pingHandler=setTimeout((()=>{console.warn("Lost connection with the server"),this.socket.close()}),7e3)}on(t,e){v(t),this.emitter.addEventListener(t,e)}once(t,e){v(t),this.emitter.addEventListener(t,e,{once:!0})}off(t,e){v(t),this.emitter.removeEventListener(t,e)}close(){try{this.status="disconnected",this.socket.close()}catch(t){}}notifyError(t){console.error(t);try{this.emitter.dispatchEvent(u("error",t instanceof Error?t.message:t))}catch(t){console.error(t)}}}function v(t){if(!w.includes(t))throw a.unsupportedEventType(t)}const w=["quote","paused","progress","finished","error"];y.estimateSwap=async function(t){const e=Object.entries(h(t)).filter((t=>void 0!==t[1])).map((([t,e])=>encodeURIComponent(t)+"="+encodeURIComponent(e))),o=(t.origin||"https://api.stellar.broker")+"/quote?"+e.join("&");try{const t=await fetch(o).then((t=>t.json()));if("success"!==t.status)throw a.quoteError(t.error||"Quote not available");return t}catch(t){if(t instanceof n)throw t;throw a.quoteError("Failed to fetch quote")}};const b=y;return i.default})()));
//# sourceMappingURL=stellarbroker.js.map